# This composition will build and deploy a full working backend to Docker containers. It's ideal for
# deploying a local backend to support frontend development.

services:

  build_java_backend:
    image: "jelastic/maven:3.9.5-openjdk-21"
    working_dir: /home/java_backend
    container_name: build_java_backend
    hostname: build_java_backend
    volumes:
      - ../java_backend:/home/java_backend
      - m2:/root/.m2
    command: /bin/sh -c "mvn clean install ${mvnparms}"

  sqlserver_db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: always
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ${sqlpass}
    ports:
      - "1433:1433"
    container_name: sqlserver_db
    hostname: sqlserver_db
    volumes:
      - mssqlvolume:/var/opt/mssql

  sqlserver_db_init:
    depends_on:
      sqlserver_db:
        condition: service_started
    build: ../java_backend/docker/${platform}/dbNewInit
    container_name: sqlserver_db_init
    hostname: sqlserver_db_init

  sso-emulator:
    image: ghcr.io/dexidp/dex:latest
    restart: always
    container_name: sso-emulator
    hostname: sso-emulator
    command: ["dex", "serve", "/etc/dex/config.yaml"]
    volumes:
      - ./config.yaml:/etc/dex/config.yaml:ro
    ports:
      - "5556:5556"

  run_java_backend:
    depends_on:
      sqlserver_db_init:
         condition: service_completed_successfully
      build_java_backend:
         condition: service_completed_successfully
      sso-emulator:
        condition: service_started
    image: "jelastic/maven:3.9.5-openjdk-21"
    restart: always
    container_name: backend
    hostname: backend
    working_dir: /home/java_backend
    environment:
      SPRING_DATASOURCE_JDBCURL: "jdbc:sqlserver://sqlserver_db:1433;database=main;user=sa;password=${sqlpass};encrypt=false"
      SPRING_DATASOURCETWO_JDBCURL: "jdbc:sqlserver://sqlserver_db:1433;database=two;user=sa;password=${sqlpass};encrypt=false"
      SPRING_DATASOURCETHREE_JDBCURL: "jdbc:sqlserver://sqlserver_db:1433;database=three;user=sa;password=${sqlpass};encrypt=false"
      OAUTH_ISSUER: "http://sso-emulator:5556"
      NEWUSERISENABLEDBYDEFAULT: true
      FIRSTUSERISADMIN: true
    ports:
      - 8080:8080
    volumes:
      - ../java_backend:/home/java_backend
    #    command: /bin/sh -c "java -Dspring.profiles.active=mockoauth -jar target/JavaBackendExemplar-1.0.0-SNAPSHOT.jar"
    command: /bin/sh -c "java -jar -Dspring.profiles.active=verbose target/JavaBackendExemplar-1.0.0-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 15s
      timeout: 10s
      retries: 5

  announce_ready:
    depends_on:
      run_java_backend:
        condition: service_healthy
    image: alpine:3.22.1
    container_name: announce_ready
    hostname: announce_ready
    command: "echo '>>>>>>>>>> Backend is ready for access on localhost at port 8080. <<<<<<<<<<'"

volumes:
  m2:
  mssqlvolume:
    driver: local
